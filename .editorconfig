root = true

[*]
indent_style = space
indent_size = 4
charset = utf-8
trim_trailing_whitespace = true
insert_final_newline = true


[*.cs]

csharp_prefer_braces = true:silent
dotnet_style_prefer_auto_properties = true:silent

dotnet_style_explicit_tuple_names = true:error
dotnet_style_prefer_inferred_anonymous_type_member_names = false:suggestion

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.private_field_should_be__privatecamelcase.severity = suggestion
dotnet_naming_rule.private_field_should_be__privatecamelcase.symbols = private_field
dotnet_naming_rule.private_field_should_be__privatecamelcase.style = _privatecamelcase

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers =

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers =

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers =

dotnet_naming_symbols.private_field.applicable_kinds = field
dotnet_naming_symbols.private_field.applicable_accessibilities = private
dotnet_naming_symbols.private_field.required_modifiers =

dotnet_naming_symbols.const.applicable_kinds = field
dotnet_naming_symbols.const.applicable_accessibilities = *
dotnet_naming_symbols.const.required_modifiers = const

# Naming styles

dotnet_naming_style.pascal_case.required_prefix =
dotnet_naming_style.pascal_case.required_suffix =
dotnet_naming_style.pascal_case.word_separator =
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix =
dotnet_naming_style.begins_with_i.word_separator =
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style._privatecamelcase.required_prefix = _
dotnet_naming_style._privatecamelcase.required_suffix =
dotnet_naming_style._privatecamelcase.word_separator =
dotnet_naming_style._privatecamelcase.capitalization = camel_case

# this

dotnet_style_qualification_for_field = false:error
dotnet_style_qualification_for_property = false:error
dotnet_style_qualification_for_method = false:error
dotnet_style_qualification_for_event = false:error

dotnet_style_predefined_type_for_locals_parameters_members = true:error
dotnet_style_predefined_type_for_member_access = true:error

# access modifiers
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:silent
dotnet_style_require_accessibility_modifiers = always:error
dotnet_style_readonly_field = true:warning

# brackets for operators

dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:warning

# object initializers

dotnet_style_object_initializer = true:warning
dotnet_style_collection_initializer = true:warning

# conditionals

dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_return = false:suggestion

# null checks

dotnet_style_coalesce_expression = true:silent
dotnet_style_null_propagation = true:silent
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:silent

# var vs explicit type

csharp_style_var_for_built_in_types = true:error
csharp_style_var_when_type_is_apparent = true:error
csharp_style_var_elsewhere = true:suggestion

# expressions

csharp_style_expression_bodied_methods = false:suggestion
csharp_style_expression_bodied_constructors = false:suggestion
csharp_style_expression_bodied_operators = false:suggestion
csharp_style_expression_bodied_properties = true:suggestion
csharp_style_expression_bodied_indexers = when_on_single_line:silent
csharp_style_expression_bodied_accessors = false:warning

csharp_style_pattern_matching_over_is_with_cast_check = true:silent
csharp_style_pattern_matching_over_as_with_null_check = true:silent
csharp_style_inlined_variable_declaration = true:silent

csharp_prefer_simple_default_expression = true:silent
csharp_style_deconstructed_variable_declaration = true:silent
csharp_style_pattern_local_over_anonymous_function = true:warning
csharp_style_throw_expression = true:silent
csharp_style_conditional_delegate_call = true:silent

# whitespace

csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# indents

csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels= flush_left

# spaces

csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_parentheses =false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false

# wrapping

csharp_preserve_single_line_statements = false
csharp_preserve_single_line_blocks = true

# usings
csharp_using_directive_placement = outside_namespace:suggestion
dotnet_sort_system_directives_first = false
dotnet_separate_import_directive_groups = false
csharp_prefer_simple_using_statement = false:suggestion

dotnet_style_prefer_simplified_boolean_expressions = true:suggestion

# IDE0058: Expression value is never used
csharp_style_unused_value_expression_statement_preference = discard_variable
dotnet_diagnostic.IDE0058.severity = none

# IDE0045: Use conditional expression for assignment
dotnet_style_prefer_conditional_expression_over_assignment = false

# CA2208: Instantiate argument exceptions correctly
dotnet_diagnostic.CA2208.severity = none

# CA1806: Do not ignore method results
dotnet_diagnostic.CA1806.severity = none

# IDE0130: Namespace does not match folder structure
dotnet_style_namespace_match_folder = true
dotnet_diagnostic.IDE0130.severity = none
