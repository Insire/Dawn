<controls:AdonisWindow x:Class="Dawn.Wpf.LoggingWindow"
                       xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
                       xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
                       xmlns:controls="clr-namespace:AdonisUI.Controls;assembly=AdonisUI"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                       xmlns:icons="http://metro.mahapps.com/winfx/xaml/iconpacks"
                       xmlns:local="clr-namespace:Dawn.Wpf"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       xmlns:mvvm="http://SoftThorn.MvvmScarletToolkit.com/winfx/xaml/shared"
                       xmlns:serilog="clr-namespace:Serilog.Events;assembly=Serilog"
                       Name="rootView"
                       Title="Log"
                       Width="700"
                       Height="350"
                       d:DataContext="{d:DesignInstance Type=local:LogViewModel,
                                                        IsDesignTimeCreatable=False}"
                       IconVisibility="Collapsed"
                       WindowStartupLocation="CenterOwner"
                       WindowStyle="ToolWindow"
                       mc:Ignorable="d">

    <!--  DataContext: LogViewModel  -->

    <controls:AdonisWindow.Resources>
        <mvvm:BindingProxy x:Key="WindowProxy" Data="{Binding ElementName=rootView}" />
    </controls:AdonisWindow.Resources>

    <DockPanel>

        <DockPanel Background="{DynamicResource {x:Static adonisUi:Brushes.Layer2BackgroundBrush}}" DockPanel.Dock="Bottom">

            <ContentControl Margin="8"
                            Padding="8"
                            HorizontalAlignment="Left">
                <ContentControl.Style>
                    <Style TargetType="{x:Type ContentControl}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Data.ShowErrors, Source={StaticResource WindowProxy}}" Value="False">
                                <Setter Property="Visibility" Value="Visible" />
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <TextBlock>
                                            <Run Text="There have been" />
                                            <Run Foreground="{DynamicResource {x:Static adonisUi:Brushes.AlertBrush}}" Text="{Binding Errors.Count, Mode=OneWay}" />
                                            <Run Text="Errors." />

                                            <Hyperlink Command="{Binding Data.ToggleViewCommand, Source={StaticResource WindowProxy}}">Show them?</Hyperlink>
                                        </TextBlock>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding Data.ShowErrors, Source={StaticResource WindowProxy}}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <TextBlock>
                                            <Run Text="There have been" />
                                            <Run Foreground="{DynamicResource {x:Static adonisUi:Brushes.AlertBrush}}" Text="{Binding Errors.Count, Mode=OneWay}" />
                                            <Run Text="Errors." />

                                            <Hyperlink Command="{Binding Data.ToggleViewCommand, Source={StaticResource WindowProxy}}">Hide them?</Hyperlink>
                                        </TextBlock>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Errors.Count}" Value="1" />
                                    <Condition Binding="{Binding Data.ShowErrors, Source={StaticResource WindowProxy}}" Value="False" />
                                </MultiDataTrigger.Conditions>

                                <MultiDataTrigger.Setters>
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <TextBlock>
                                                <Run Text="There has been" />
                                                <Run Foreground="{DynamicResource {x:Static adonisUi:Brushes.AlertBrush}}" Text="1" />
                                                <Run Text="Error." />

                                                <Hyperlink Command="{Binding Data.ToggleViewCommand, Source={StaticResource WindowProxy}}">Show it?</Hyperlink>
                                            </TextBlock>
                                        </Setter.Value>
                                    </Setter>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Errors.Count}" Value="1" />
                                    <Condition Binding="{Binding Data.ShowErrors, Source={StaticResource WindowProxy}}" Value="True" />
                                </MultiDataTrigger.Conditions>

                                <MultiDataTrigger.Setters>
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <TextBlock>
                                                <Run Text="There has been" />
                                                <Run Foreground="{DynamicResource {x:Static adonisUi:Brushes.AlertBrush}}" Text="1" />
                                                <Run Text="Error." />

                                                <Hyperlink Command="{Binding Data.ToggleViewCommand, Source={StaticResource WindowProxy}}">Hide it?</Hyperlink>
                                            </TextBlock>
                                        </Setter.Value>
                                    </Setter>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>

                            <DataTrigger Binding="{Binding Errors.Count}" Value="0">
                                <Setter Property="Visibility" Value="Hidden" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentControl.Style>
            </ContentControl>

            <Button Margin="8"
                    Padding="8"
                    HorizontalAlignment="Right"
                    Command="{Binding CloseCommand, ElementName=rootView}"
                    Foreground="{DynamicResource {x:Static adonisUi:Brushes.SuccessBrush}}"
                    ToolTip="OK">
                <icons:FontAwesome Kind="CheckSolid" />
            </Button>
        </DockPanel>

        <ProgressBar adonisExtensions:ProgressBarExtension.IsProgressAnimationEnabled="False" DockPanel.Dock="Bottom">
            <i:Interaction.Behaviors>
                <mvvm:SmoothProgressBehavior Percentage="{Binding Percentage, Mode=OneWay}" />
            </i:Interaction.Behaviors>
        </ProgressBar>

        <ScrollViewer Margin="8">
            <ItemsControl>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel IsItemsHost="True" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type local:LogEventViewModel}">
                        <Border BorderBrush="{x:Null}" BorderThickness="0">
                            <Border.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Command="{Binding CopyCommand}" Header="Copy">
                                        <MenuItem.Icon>
                                            <icons:PackIconFontAwesome Kind="CopySolid" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </ContextMenu>
                            </Border.ContextMenu>

                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Loaded">
                                    <i:InvokeCommandAction Command="{Binding RenderCommand}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                            <Border.ToolTip>
                                <ToolTip>
                                    <ItemsControl ItemsSource="{Binding Properties}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel IsItemsHost="True" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock>
                                                    <Run Text="{Binding Key, Mode=OneWay}" />
                                                    <Run Text="{Binding Value, Mode=OneWay}" />
                                                </TextBlock>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </ToolTip>
                            </Border.ToolTip>

                            <TextBlock>
                                <Run Text="{Binding Timestamp, Mode=OneWay, StringFormat='{}{0: dd.MM.yyyy HH:mm:ss.fff}'}" />
                                <Run Text="{Binding Level, Mode=OneWay}">
                                    <Run.Style>
                                        <Style TargetType="{x:Type Run}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Level}" Value="{x:Static serilog:LogEventLevel.Verbose}">
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.DisabledForegroundBrush}}" />
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding Level}" Value="{x:Static serilog:LogEventLevel.Debug}">
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}" />
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding Level}" Value="{x:Static serilog:LogEventLevel.Information}">
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.SuccessBrush}}" />
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding Level}" Value="{x:Static serilog:LogEventLevel.Warning}">
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.AlertBrush}}" />
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding Level}" Value="{x:Static serilog:LogEventLevel.Error}">
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.ErrorBrush}}" />
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding Level}" Value="{x:Static serilog:LogEventLevel.Fatal}">
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.ErrorBrush}}" />
                                                    <Setter Property="FontWeight" Value="Bold" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Run.Style>
                                </Run>

                                <Run Text="{Binding Text, Mode=OneWay}" />
                            </TextBlock>
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>

                <ItemsControl.Style>
                    <Style TargetType="{x:Type ItemsControl}">
                        <Setter Property="ItemsSource" Value="{Binding Items}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ShowErrors, ElementName=rootView}" Value="True">
                                <Setter Property="ItemsSource" Value="{Binding Errors}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ItemsControl.Style>
            </ItemsControl>
        </ScrollViewer>
    </DockPanel>
</controls:AdonisWindow>
