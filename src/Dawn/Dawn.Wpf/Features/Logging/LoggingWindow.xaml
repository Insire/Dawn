<controls:AdonisWindow x:Class="Dawn.Wpf.LoggingWindow"
                       xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
                       xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
                       xmlns:controls="clr-namespace:AdonisUI.Controls;assembly=AdonisUI"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                       xmlns:icons="http://metro.mahapps.com/winfx/xaml/iconpacks"
                       xmlns:local="clr-namespace:Dawn.Wpf"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       xmlns:mvvm="http://SoftThorn.MvvmScarletToolkit.com/winfx/xaml/shared"
                       xmlns:serilog="clr-namespace:Serilog.Events;assembly=Serilog"
                       Name="rootView"
                       Title="Log"
                       Width="700"
                       Height="350"
                       d:DataContext="{d:DesignInstance Type=local:LogViewModel,
                                                        IsDesignTimeCreatable=False}"
                       IconVisibility="Collapsed"
                       WindowStartupLocation="CenterOwner"
                       WindowStyle="ToolWindow"
                       mc:Ignorable="d">

    <!--  DataContext: LogViewModel  -->

    <controls:AdonisWindow.Resources>
        <mvvm:BindingProxy x:Key="WindowProxy" Data="{Binding ElementName=rootView}" />

        <DataTemplate DataType="{x:Type local:LogEventViewModel}">
            <Border BorderBrush="{x:Null}" BorderThickness="0">
                <Border.ContextMenu>
                    <ContextMenu>
                        <MenuItem Command="{Binding CopyCommand}" Header="Copy">
                            <MenuItem.Icon>
                                <icons:PackIconFontAwesome Kind="CopySolid" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </Border.ContextMenu>

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Loaded">
                        <i:InvokeCommandAction Command="{Binding RenderCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <Border.ToolTip>
                    <ToolTip>
                        <ItemsControl ItemsSource="{Binding Properties}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel IsItemsHost="True" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock>
                                        <Run Text="{Binding Key, Mode=OneWay}" />
                                        <Run Text="{Binding Value, Mode=OneWay}" />
                                    </TextBlock>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ToolTip>
                </Border.ToolTip>

                <TextBlock>
                    <Run Text="{Binding Timestamp, Mode=OneWay, StringFormat='{}{0: dd.MM.yyyy HH:mm:ss.fff}'}" />
                    <Run Text="{Binding Level, Mode=OneWay}">
                        <Run.Style>
                            <Style TargetType="{x:Type Run}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Level}" Value="{x:Static serilog:LogEventLevel.Verbose}">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.DisabledForegroundBrush}}" />
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Level}" Value="{x:Static serilog:LogEventLevel.Debug}">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}" />
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Level}" Value="{x:Static serilog:LogEventLevel.Information}">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.SuccessBrush}}" />
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Level}" Value="{x:Static serilog:LogEventLevel.Warning}">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.AlertBrush}}" />
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Level}" Value="{x:Static serilog:LogEventLevel.Error}">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.ErrorBrush}}" />
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Level}" Value="{x:Static serilog:LogEventLevel.Fatal}">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.ErrorBrush}}" />
                                        <Setter Property="FontWeight" Value="Bold" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Run.Style>
                    </Run>

                    <Run Text="{Binding Text, Mode=OneWay}" />
                </TextBlock>
            </Border>
        </DataTemplate>
    </controls:AdonisWindow.Resources>

    <DockPanel>
        <!--  Notification Area  -->
        <DockPanel Background="{DynamicResource {x:Static adonisUi:Brushes.Layer2BackgroundBrush}}" DockPanel.Dock="Bottom">

            <ContentControl Margin="8"
                            Padding="8"
                            HorizontalAlignment="Left">
                <ContentControl.Style>
                    <Style TargetType="{x:Type ContentControl}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Errors.Count, Converter={mvvm:GreaterThan}, ConverterParameter=1}" Value="True">

                                <DataTrigger.Setters>
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <TextBlock>
                                                <Run Text="There were" />
                                                <Run Foreground="{DynamicResource {x:Static adonisUi:Brushes.AlertBrush}}" Text="{Binding Errors.Count, Mode=OneWay}" />
                                                <Run Text="Errors" />
                                            </TextBlock>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger.Setters>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding Errors.Count}" Value="1">
                                <DataTrigger.Setters>
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <TextBlock>
                                                <Run Text="There were" />
                                                <Run Foreground="{DynamicResource {x:Static adonisUi:Brushes.AlertBrush}}" Text="1" />
                                                <Run Text="Error" />
                                            </TextBlock>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger.Setters>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding Errors.Count}" Value="0">
                                <Setter Property="Visibility" Value="Hidden" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentControl.Style>
            </ContentControl>

            <Button Margin="8"
                    Padding="8"
                    HorizontalAlignment="Right"
                    Command="{Binding CloseCommand, ElementName=rootView}"
                    Foreground="{DynamicResource {x:Static adonisUi:Brushes.SuccessBrush}}"
                    ToolTip="OK">
                <icons:FontAwesome Kind="CheckSolid" />
            </Button>
        </DockPanel>

        <ProgressBar adonisExtensions:ProgressBarExtension.IsProgressAnimationEnabled="False" DockPanel.Dock="Bottom">
            <i:Interaction.Behaviors>
                <mvvm:SmoothProgressBehavior Percentage="{Binding Percentage, Mode=OneWay}" />
            </i:Interaction.Behaviors>
        </ProgressBar>

        <!--  CONTENT  -->
        <TabControl>
            <TabItem Header="Overview">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="5*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="1"
                               Grid.Column="1"
                               HorizontalAlignment="Center"
                               Text="{Binding Percentage, Mode=OneWay, StringFormat='{}{0}%'}"
                               TextTrimming="CharacterEllipsis"
                               TextWrapping="Wrap" />

                    <DockPanel Grid.Row="2"
                               Grid.Column="1"
                               VerticalAlignment="Bottom"
                               LastChildFill="False">

                        <TextBlock DockPanel.Dock="Bottom"
                                   TextTrimming="CharacterEllipsis"
                                   TextWrapping="Wrap">
                            <Run Text="Last Error" />
                            <Run Foreground="{DynamicResource {x:Static adonisUi:Brushes.AlertBrush}}" Text="{Binding CurrentError.Text, Mode=OneWay}" />
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Errors.Count}" Value="0">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>

                        <TextBlock DockPanel.Dock="Bottom"
                                   TextTrimming="CharacterEllipsis"
                                   TextWrapping="WrapWithOverflow">
                            <Run Text="Last Message" />
                            <Run Foreground="{DynamicResource {x:Static adonisUi:Brushes.SuccessBrush}}" Text="{Binding CurrentInfo.Text, Mode=OneWay}" />
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding CurrentInfo}" Value="{x:Null}">
                                            <Setter Property="Visibility" Value="Hidden" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </DockPanel>
                </Grid>
            </TabItem>

            <!--  Log  -->
            <TabItem Header="Log">
                <ScrollViewer Margin="8">
                    <ScrollViewer Margin="8">
                        <ItemsControl ItemsSource="{Binding Items}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel IsItemsHost="True" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </ScrollViewer>
                </ScrollViewer>
            </TabItem>

            <!--  Errors  -->
            <TabItem>
                <TabItem.Header>
                    <TextBlock>
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Errors.Count}" Value="0">
                                        <Setter Property="Text" Value="Errors" />
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Errors.Count, Converter={mvvm:GreaterThan}, ConverterParameter=0}" Value="True">
                                        <Setter Property="Text" Value="{Binding Errors.Count, StringFormat='{}Errors {0}'}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </TabItem.Header>
                <ScrollViewer Margin="8">
                    <ItemsControl ItemsSource="{Binding Errors}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel IsItemsHost="True" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </ScrollViewer>
            </TabItem>
        </TabControl>
    </DockPanel>
</controls:AdonisWindow>
